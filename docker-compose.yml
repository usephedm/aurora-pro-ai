version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aurora-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aurora-network

  # Ollama Local LLM
  ollama:
    image: ollama/ollama:latest
    container_name: aurora-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aurora-network

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aurora-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/aurora.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OLLAMA_BASE_URL=http://ollama:11434
      - METRICS_ENABLED=true
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aurora-network

  # Streamlit GUI
  gui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aurora-gui
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000
    volumes:
      - ./src:/app/src
    depends_on:
      api:
        condition: service_healthy
    command: streamlit run src/gui/app.py --server.port 8501 --server.address 0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aurora-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: aurora-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - api
    networks:
      - aurora-network

  # Grafana Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: aurora-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - aurora-network

volumes:
  redis_data:
  ollama_data:
  prometheus_data:
  grafana_data:

networks:
  aurora-network:
    driver: bridge
